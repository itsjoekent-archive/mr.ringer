{"version":3,"file":"static/webpack/static/development/pages/index.js.81c00753bb1b7a9d1478.hot-update.js","sources":["webpack:///./pages/Section.js","webpack:///./pages/index.js"],"sourcesContent":["import styled from 'styled-components';\nimport marksy from 'marksy';\nimport { createElement } from 'react';\nimport { chalkUnderlineStyle } from './sharedStyles';\n\nconst SectionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 64px;\n`;\n\nconst SectionParagraph = styled.p`\n  display: inline-block;\n  ${({ theme }) => theme.font}\n  font-size: ${({ theme }) => theme.fontSizes.body};\n  font-weight: 400;\n  letter-spacing: ${({ theme }) => theme.letterSpacing};\n  line-height: ${({ theme }) => theme.lineHeight};\n  color: ${({ theme }) => theme.colors.light};\n  text-decoration: none;\n  margin-bottom: 12px;\n`;\n\nconst SectionAnchor = styled.a`\n  display: inline-block;\n  ${({ theme }) => theme.font}\n  font-size: ${({ theme }) => theme.fontSizes.body};\n  font-weight: 400;\n  letter-spacing: ${({ theme }) => theme.letterSpacing};\n  line-height: ${({ theme }) => theme.lineHeight};\n  color: ${({ theme }) => theme.colors.lightComplimentary};\n  cursor: pointer;\n  text-decoration: none;\n\n  &:hover {\n    ${chalkUnderlineStyle}\n  }\n`;\n\nconst compileMarkdown = marksy({\n  createElement,\n  elements: {\n    p: SectionParagraph,\n    a: SectionAnchor,\n  },\n});\n\nconst Title = styled.h2`\n  display: block;\n  ${({ theme }) => theme.font}\n  font-size: ${({ theme }) => theme.fontSizes.title};\n  font-weight: 700;\n  letter-spacing: ${({ theme }) => theme.letterSpacing};\n  line-height: ${({ theme }) => theme.lineHeight};\n  color: ${({ theme }) => theme.colors.light};\n  margin-bottom: 36px;\n`;\n\nconst TerminalContainer = styled.div`\n  display: block;\n  padding: 16px;\n  background-color: ${({ theme }) => theme.colors.dark};\n`;\n\nexport default function Section(props) {\n  const { id, title, composition } = props;\n\n  return (\n    <SectionContainer>\n      <Title id={id}>{title}</Title>\n      {composition &&\n        composition.map(({ type, content }) => {\n          const key = JSON.stringify(content);\n\n          if (type === 'markdown') {\n            return (\n              <React.Fragment key={key}>\n                {compileMarkdown(content).tree}\n              </React.Fragment>\n            );\n          }\n\n          return null;\n        })}\n    </SectionContainer>\n  );\n}\n","import styled, { createGlobalStyle, css } from 'styled-components';\nimport Navigation from './Navigation';\nimport Section from './Section';\nimport content from './content';\n\nconst PageBackground = createGlobalStyle`\n  body {\n    width: 100%;\n    min-height: 100vh;\n\n    background-color: ${({ theme }) => theme.colors.dark};\n\n    background-image: url(${process.env.ASSET_PREFIX}/chalk-noise.png);\n    background-size: 1280px 720px;\n    background-repeat: repeat;\n  }\n`;\n\nconst layoutBreakpoint = css`\n  min-width: 1024px\n`;\n\nconst PageLayout = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  margin-top: 24px;\n  padding-left: 24px;\n  padding-right: 24px;\n\n  @media (${layoutBreakpoint}) {\n    flex-direction: row;\n    justify-content: space-between;\n    max-width: 1280px;\n    margin-top: 48px;\n    margin-left: auto;\n    margin-right: auto;\n  }\n`;\n\nconst NavColumn = styled.div`\n  width: 100%;\n  margin-bottom: 48px;\n\n  @media (${layoutBreakpoint}) {\n    width: calc(25% - 24px);\n    margin-bottom: 0;\n  }\n`;\n\nconst MainColumn = styled(NavColumn)`\n  @media (${layoutBreakpoint}) {\n    width: calc(75% - 48px);\n  }\n`;\n\nexport default function Home(props) {\n  return (\n    <React.Fragment>\n      <PageBackground />\n      <PageLayout>\n        <NavColumn>\n          <Navigation />\n        </NavColumn>\n        <MainColumn>\n          {content.sections.map((section) => (\n            <Section {...section} key={section.id} />\n          ))}\n        </MainColumn>\n      </PageLayout>\n    </React.Fragment>\n  );\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AASA;AACA;AACA;AACA;AACA;AAFA;AAFA;AAQA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAGA;AAAA;AACA;AADA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtFA;AACA;AACA;AACA;AAEA;AAKA;AAAA;AAAA;AAQA;AAIA;AAAA;AAAA;AAAA;AAkBA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAMA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAOA;;;;A","sourceRoot":""}