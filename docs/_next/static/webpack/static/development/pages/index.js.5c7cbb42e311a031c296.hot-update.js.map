{"version":3,"file":"static/webpack/static/development/pages/index.js.5c7cbb42e311a031c296.hot-update.js","sources":["webpack:///./src/Sandbox.js"],"sourcesContent":["import styled, { css, keyframes, withTheme } from 'styled-components';\nimport { Controlled as CodeMirror } from 'react-codemirror2';\nimport { useEffect, useRef, useState } from 'react';\nimport { Vector2 as MathVector2 } from 'mr.ringer';\nimport lessons from './lessons';\n\n// Referenced from, https://jaketrent.com/post/render-codemirror-on-server/\nlet modeLoaded = false;\nif (typeof window !== 'undefined' && typeof window.navigator !== 'undefined') {\n  require('codemirror/mode/javascript/javascript');\n  modeLoaded = true;\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  width: 100%;\n  max-height: 90vh;\n  margin-top: 48px;\n  margin-bottom: 48px;\n  padding-top: 16px;\n  background-color: ${({ theme }) => theme.colors.dark};\n  border-top: 2px solid ${({ theme }) => theme.colors.complimentary};\n  border-bottom: 2px solid ${({ theme }) => theme.colors.complimentary};\n  position: relative;\n\n  @media (min-width: 1280px) {\n    height: 90vh;\n  }\n\n  &:before {\n    content: 'Mr. Ringer TI-84';\n    ${({ theme }) => theme.chalkFont}\n    font-size: ${({ theme }) => theme.fontSizes.body};\n    font-weight: 700;\n    font-style: italic;\n    letter-spacing: ${({ theme }) => theme.chalkLetterSpacing};\n    line-height: ${({ theme }) => theme.chalkLineHeight};\n    text-transform: uppercase;\n    color: ${({ theme }) => theme.colors.complimentary};\n    background-color: ${({ theme }) => theme.colors.dark};\n    border: 2px solid ${({ theme }) => theme.colors.complimentary};\n    border-radius: 4px;\n    position: absolute;\n    left: 50%;\n    transform: translate(-50%);\n    top: -0.65em;\n    padding-left: 16px;\n    padding-right: 16px;\n  }\n`;\n\nconst LessonsColumn = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 16px;\n  width: 50%;\n  max-height: 200px;\n  overflow-y: scroll;\n\n  @media (min-width: 1280px) {\n    width: 20%;\n    max-height: none;\n  }\n`;\n\nconst LessonsColumnHeader = styled.h2`\n  display: block;\n  ${({ theme }) => theme.font}\n  font-size: ${({ theme }) => theme.fontSizes.header};\n  font-weight: 700;\n  letter-spacing: ${({ theme }) => theme.letterSpacing};\n  line-height: ${({ theme }) => theme.lineHeight};\n  color: ${({ theme }) => theme.colors.light};\n  margin-bottom: 12px;\n`;\n\nconst LessonsColumnSubheader = styled.p`\n  display: block;\n  ${({ theme }) => theme.font}\n  font-size: ${({ theme }) => theme.fontSizes.small};\n  font-weight: 400;\n  letter-spacing: ${({ theme }) => theme.letterSpacing};\n  line-height: ${({ theme }) => theme.lineHeight};\n  color: ${({ theme }) => theme.colors.light};\n  text-decoration: none;\n  margin-bottom: 24px;\n`;\n\nconst lessonTitleHoverFrames = (theme) => keyframes`\n  0% {\n    background-position: 0% 50%;\n  }\n\n  100% {\n    background-position: 100% 50%;\n  }\n`;\n\nconst LessonTitle = styled.button`\n  ${({ theme }) => theme.font}\n  font-size: ${({ theme }) => theme.fontSizes.small};\n  font-weight: 400;\n  letter-spacing: ${({ theme }) => theme.letterSpacing};\n  line-height: ${({ theme }) => theme.lineHeight};\n  color: ${({ theme }) => theme.colors.lightComplimentary};\n  border: none;\n  margin: 0;\n  margin-bottom: 12px;\n  padding: 0;\n  background: none;\n  cursor: pointer;\n  text-align: left;\n  position: relative;\n\n  ${({ theme, isActive }) =>\n    isActive &&\n    css`\n      color: ${({ theme }) => theme.colors.complimentary};\n    `}\n\n  &:hover:after {\n    content: '';\n    display: block;\n    position: absolute;\n    bottom: 0px;\n    left: 0;\n    width: 100%;\n    height: 3px;\n    background: linear-gradient(to right, ${({ theme }) =>\n      theme.colors.lightComplimentary}, ${({ theme }) =>\n  theme.colors.complimentary});\n    background-size: 200% 500%;\n    animation: 1s linear 0s infinite alternate ${({ theme }) =>\n      lessonTitleHoverFrames(theme)};\n  }\n`;\n\nconst ChartColumn = styled.div`\n  width: 50%;\n  padding: 16px;\n  position: relative;\n\n  @media (min-width: 1280px) {\n    width: 40%;\n  }\n`;\n\nconst errorMessageEntrance = keyframes`\n  0% {\n    bottom: -100%;\n    opacity: 0;\n  }\n\n  100% {\n    bottom: 16px;\n    opacity: 1;\n  }\n`;\n\nconst ErrorMessage = styled.p`\n  position: absolute;\n  left: 0;\n  width: 100%;\n  padding: 16px;\n  ${({ theme }) => theme.font}\n  font-size: ${({ theme }) => theme.fontSizes.body};\n  font-weight: 700;\n  letter-spacing: ${({ theme }) => theme.letterSpacing};\n  line-height: ${({ theme }) => theme.lineHeight};\n  color: ${({ theme }) => theme.colors.complimentary};\n  background-color: ${({ theme }) => theme.colors.lightComplimentary};\n  animation: 0.5s linear forwards ${errorMessageEntrance};\n`;\n\nconst ChartCanvas = styled.canvas``;\n\nconst CodeColumn = styled.div`\n  width: 100%;\n  padding: 16px;\n  height: 100%;\n\n  @media (min-width: 1280px) {\n    width: 40%;\n    height: 100%;\n\n    .code-mirror-override,\n    .code-mirror-override .CodeMirror {\n      height: 100%;\n    }\n  }\n`;\n\nfunction Sandbox(props) {\n  const { theme } = props;\n\n  const [activeLesson, setActiveLesson] = useState(lessons[0]);\n  const [script, setScript] = useState(lessons[0].script);\n  const [scriptError, setScriptError] = useState(null);\n\n  const lessonsColumnRef = useRef(null);\n  const canvasRef = useRef(null);\n\n  useEffect(() => {\n    setScript(activeLesson.script);\n  }, [activeLesson]);\n\n  useEffect(() => {\n    function runScript() {\n      const canvasWidth = canvasRef.current.width;\n      const canvasHeight = canvasRef.current.height;\n      const ctx = canvasRef.current.getContext('2d');\n\n      const Vector2 = MathVector2;\n\n      const topPadding = canvasHeight * 0.1;\n      const leftPadding = canvasWidth * 0.1;\n\n      let gridDimension = '2d';\n      let gridLength = 100;\n\n      function getPoint(x, y) {\n        if (gridDimension === '2d') {\n          const canvasGridWidth = canvasWidth - leftPadding;\n          const canvasCenterX = canvasGridWidth / 2;\n          const gridPixelsPerWideUnit = canvasGridWidth / gridLength;\n\n          const canvasGridHeight = canvasHeight - topPadding;\n          const canvasCenterY = canvasGridHeight / 2;\n          const gridPixelsPerTallUnit = canvasGridHeight / gridLength;\n\n          return {\n            x: canvasCenterX + (x * gridPixelsPerWideUnit),\n            y: canvasCenterY - (y * gridPixelsPerTallUnit),\n          };\n        }\n      }\n\n      function grid(dimension, length) {\n        gridDimension = dimension;\n        gridLength = length;\n\n        if (dimension === '2d') {\n          ctx.strokeStyle = theme.colors.light;\n          ctx.lineWidth = '1px';\n\n          const origin = getPoint(0, 0);\n          const top = getPoint(0, gridLength);\n          const bottom = getPoint(0, -gridLength);\n          const left = getPoint(-gridLength, 0);\n          const right = getPoint(gridLength, 0);\n\n          ctx.moveTo(top.x, top.y);\n          ctx.lineTo(bottom.x, bottom.y);\n          ctx.moveTo(left.x, left.y);\n          ctx.lineTo(right.x, right.y);\n          ctx.stroke();\n\n          console.log({\n            origin,\n            top,\n            bottom,\n            left,\n            right,\n          });\n        }\n      }\n\n      function lineColor(color) {\n        console.log('lineColor', color);\n      }\n\n      function arrow(fromX, fromY, toX, toY) {\n        console.log('arrow', fromX, fromY, toX, toY);\n      }\n\n      try {\n        ctx.clearRect(0, 0, canvasWidth, canvasHeight);\n        eval(script);\n        setScriptError(null);\n      } catch (error) {\n        console.error(error);\n        setScriptError(error.message);\n      }\n    }\n\n    if (!canvasRef.current || !script) {\n      return;\n    }\n\n    runScript();\n  }, [canvasRef.current, script]);\n\n  useEffect(() => {\n    if (!canvasRef.current || !lessonsColumnRef.current) {\n      return;\n    }\n\n    function resizeCanvas() {\n      console.log(lessonsColumnRef.current.getBoundingClientRect())\n      canvasRef.current.width = lessonsColumnRef.current.offsetWidth;\n      canvasRef.current.height = lessonsColumnRef.current.offsetHeight;\n    }\n\n    resizeCanvas()\n\n    window.addEventListener('resize', resizeCanvas);\n\n    return () => window.removeEventListener('resize', resizeCanvas);\n  }, [canvasRef.current, lessonsColumnRef.current]);\n\n  const codeMirrorOptions = {\n    theme: 'nord',\n    lineNumbers: true,\n    lineWrapping: true,\n  };\n\n  if (modeLoaded) {\n    codeMirrorOptions.mode = 'javascript';\n  }\n\n  return (\n    <Container>\n      <LessonsColumn ref={lessonsColumnRef}>\n        <LessonsColumnHeader>Lessons</LessonsColumnHeader>\n        <LessonsColumnSubheader>\n          Click a lesson to learn more about the topic.\n        </LessonsColumnSubheader>\n        {lessons.map((item, index) => (\n          <span key={item.id}>\n            <LessonTitle\n              isActive={activeLesson.id === item.id}\n              onClick={() => setActiveLesson(item)}\n            >\n              {index + 1}. {item.title}\n            </LessonTitle>\n          </span>\n        ))}\n      </LessonsColumn>\n      <ChartColumn>\n        <ChartCanvas ref={canvasRef} />\n        {scriptError && <ErrorMessage>{scriptError}</ErrorMessage>}\n      </ChartColumn>\n      <CodeColumn>\n        <CodeMirror\n          className=\"code-mirror-override\"\n          value={script}\n          options={codeMirrorOptions}\n          onBeforeChange={(editor, data, value) => setScript(value)}\n        />\n      </CodeColumn>\n    </Container>\n  );\n}\n\nexport default withTheme(Sandbox);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AASA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAcA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAIA;AAAA;AAAA;AACA;AASA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAUA;AAAA;AAAA;AAGA;AAAA;AAAA;AAHA;AAcA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAUA;AAYA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAeA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAMA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;;;;A","sourceRoot":""}