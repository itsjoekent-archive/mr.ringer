{"version":3,"file":"static/webpack/static/development/pages/index.js.5a1851d3495956762d4f.hot-update.js","sources":["webpack:///./src/Section.js"],"sourcesContent":["import styled from 'styled-components';\nimport marksy from 'marksy';\nimport { createElement } from 'react';\nimport { chalkUnderlineStyle } from './sharedStyles';\n\nconst TerminalContainer = styled.div`\n  display: block;\n  margin-top: 24px;\n  margin-bottom: 24px;\n  padding-left: 16px;\n  word-break: break-word;\n`;\n\nconst TerminalLine = styled.p`\n  font-family: monospace;\n  font-size: ${({ theme }) => theme.fontSizes.body};\n  font-weight: 400;\n  color: ${({ theme }) => theme.colors.lightComplimentary};\n  line-height: 1.1;\n  margin-bottom: 4px;\n`;\n\nconst TerminalLineBreak = styled.span`\n  display: block;\n  width: 100%;\n  height: calc((${({ theme }) => theme.fontSizes.body} * 1.1) + 4px);\n`;\n\nexport default function Section(props) {\n  const { id, title, composition } = props;\n\n  return (\n    <SectionContainer>\n      <Title id={id}>{title}</Title>\n      {composition &&\n        composition.map(({ type, content }) => {\n          const key = JSON.stringify(content);\n\n          if (type === 'markdown') {\n            return (\n              <React.Fragment key={key}>\n                {compileMarkdown(content).tree}\n              </React.Fragment>\n            );\n          }\n\n          if (type === 'terminal') {\n            return (\n              <TerminalContainer key={key}>\n                {content.map((line, index) =>\n                  line.length ? (\n                    <TerminalLine key={index}>{line}</TerminalLine>\n                  ) : (\n                    <TerminalLineBreak key={index} />\n                  )\n                )}\n              </TerminalContainer>\n            );\n          }\n\n          return null;\n        })}\n    </SectionContainer>\n  );\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAEA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAGA;AAAA;AACA;AADA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AASA;AACA;AACA;AACA;AAGA;;;;A","sourceRoot":""}